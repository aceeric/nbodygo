package main

import (
	"nbodygo/cmd/body"
	"nbodygo/cmd/globals"
	"nbodygo/cmd/interfaces"
	"nbodygo/cmd/sim"
	"nbodygo/internal/pkg/math32"
)

type bodyCsvRow struct {
	x, y, z, vx, vy, vz, mass, radius float32
}

var testBodies = []bodyCsvRow {
	{0,   3,  -3,         9,        2,        0,5.96E+30,     20},
	{-146,-215,-328,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-269,-160,-442,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-266,-164,-170,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-127,-129,-207,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-300,-264,-281,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-234,-122,-181,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-203,-175,-203,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-199,-181,-131,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-224,-127,-308,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-293,-254,-433,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-287,-223,-346,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-144,-148,-329,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-207,-298,-305,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-248,-140,-245,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-172,-146,-170,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-291,-171,-189,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-238,-226,-230,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-164,-134,-394,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-246,-200,-413,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-293,-255,-345,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-296,-248,-396,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-293,-232,-273,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-155,-211,-436,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-251,-254,-151,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-147,-169,-265,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-185,-214,-363,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-238,-239,-431,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-284,-299,-413,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-237,-217,-346,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-124,-277,-413,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-298,-150,-410,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-226,-215,-483,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-246,-227,-186,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-195,-182,-149,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-200,-205,-415,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-191,-130,-221,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-157,-238,-385,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-212,-184,-349,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-136,-184,-185,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-126,-168,-468,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-246,-140,-168,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-286,-173,-344,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-280,-154,-244,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-191,-256,-408,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-212,-260,-442,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-296,-162,-248,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-139,-251,-363,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-147,-260,-348,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-190,-192,-490,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-180,-256,-139,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-171,-286,-433,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-187,-266,-156,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-279,-300,-123,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-200,-254,-410,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-192,-175,-455,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-242,-276,-446,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-288,-269,-341,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-274,-184,-396,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-138,-129,-306,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-251,-249,-137,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-277,-188,-322,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-242,-217,-378,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-229,-126,-240,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-212,-273,-495,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-136,-147,-462,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-269,-145,-240,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-172,-185,-333,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-268,-242,-254,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-250,-126,-178,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-176,-237,-237,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-222,-165,-385,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-270,-151,-291,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-167,-219,-460,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-211,-198,-315,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-249,-281,-289,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-260,-300,-474,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-261,-219,-124,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-205,-248,-362,-497827312,392344240,403464000,2.93E+12,0.421431},
	{-167,-148,-278,-497827312,392344240,403464000,2.93E+12,0.421431},
}

func main() {
	var bodies []interfaces.SimBody
	/*
	for id, row := range testBodies {
		b := body.NewBody(id, row.x, row.y, row.z, row.vx, row.vy, row.vz, row.mass, row.radius, globals.Elastic,
			globals.Red, 0, 0, false, "", "",false)
		if id == 0 {
			b.SetSun()
		}
		bodies = append(bodies, &b)
	}
	*/
	b1 := body.NewBody(1, 100, 0, 0, -100000000, 0, 0, 1e30, 24, globals.Elastic,
		globals.Red, 0, 0, false, "", "",false)
	b2 := body.NewBody(2, -100, 0, 0, 200000000, 53112323, 0, 1e12, 20, globals.Elastic,
		globals.Yellow, 0, 0, false, "", "",false)
	b3 := body.NewBody(3, 1200, 1220, 1600, 0, 0, 0, 1e1, 20, globals.Elastic,
		globals.White, 0, 0, false, "", "",false)
	b3.SetSun()
	bodies = append(bodies, &b1, &b2, &b3)
	bodies = sim.Sim1(500, globals.Elastic, globals.Random, "")

	sim.NewNBodySimBuilder().
		Bodies(bodies).
		Threads(5).
		Scaling(.000000002).
		InitialCam(*math32.NewVector3(10, 100, 800)).
		SimThread(nil).
		Render(true).
		Resolution([2]int{2560, 1405}).
		VSync(true).
		FrameRate(-1).
		Build().
		Run()
}
